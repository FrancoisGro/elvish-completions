#+TITLE:  Elvish completions for various built-in commands
#+AUTHOR: Diego Zamboni
#+EMAIL:  diego@zzamboni.org

This command provides completions for some of Elvish's built-in commands.

This file is written in [[http://www.howardism.org/Technical/Emacs/literate-programming-tutorial.html][literate programming style]], to make it easy to explain. See [[file:$name.elv][$name.elv]] for the generated file.

* Table of Contents                                            :TOC:noexport:
- [[#usage][Usage]]
- [[#implementation][Implementation]]

* Usage

Install the =elvish-modules= package using [[https://elvish.io/ref/epm.html][epm]]:

#+begin_src elvish
  use epm
  epm:install github.com/zzamboni/elvish-completions
#+end_src

In your =rc.elv=, load this module:

#+begin_src elvish
  use github.com/zzamboni/elvish-completions/builtins
#+end_src

* Implementation
:PROPERTIES:
:header-args:elvish: :tangle (concat (file-name-sans-extension (buffer-file-name)) ".elv")
:header-args: :mkdirp yes :comments no
:END:

Load the completion framework and other libraries.

#+begin_src elvish
  use ./comp
  use re
#+end_src

Completer for the =use= command, which includes all modules in =~/.elvish/lib/=.

#+begin_src elvish
  use-completer = [
    &-seq= [
      { put ~/.elvish/lib/**[nomatch-ok].elv | each [m]{
          if (not (-is-dir $m)) {
            re:replace ~/.elvish/lib/'(.*).elv' '$1' $m
          }
        }
      }
    ]
  ]

  edit:completion:arg-completer[use] = (comp:expand-wrapper $use-completer)
#+end_src

Completers for the =epm= commands.

#+begin_src elvish
  use epm

  epm-completer-one  = (comp:sequence [ $epm:list~ ])
  epm-completer-many = (comp:sequence [ $epm:list~ ...])
  edit:completion:arg-completer[epm:query]     = $epm-completer-one
  edit:completion:arg-completer[epm:metadata]  = $epm-completer-one
  edit:completion:arg-completer[epm:dest]      = $epm-completer-one
  edit:completion:arg-completer[epm:uninstall] = $epm-completer-many
  edit:completion:arg-completer[epm:upgrade]   = $epm-completer-many
#+end_src
